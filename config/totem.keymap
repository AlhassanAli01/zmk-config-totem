#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define NUM  2
#define SYM  3
#define FUN  4
#define MEDIA 5
#define MOUSE 6

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        escaperw {
            bindings = <&kp ESCAPE>;
            key-positions = <1 3>;
        };
    };

    macros {
        gif: gif {
            label = "giphy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N2>,
                <&macro_release>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp G &kp I &kp F>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "BASE";
            bindings = <
            &kp Q  &kp W               &kp E           &kp R               &kp T         &kp Y      &kp U               &kp I            &kp O                &kp P
            &kp A  &mt LEFT_COMMAND S  &mt LEFT_ALT D  &mt LEFT_CONTROL F  &kp G         &kp H      &mt LEFT_CONTROL J  &mt RIGHT_ALT K  &mt RIGHT_COMMAND L  &kp SEMICOLON
&kp DELETE  &kp Z  &kp X               &kp C           &kp V               &kp B         &kp N      &kp M               &kp COMMA        &kp DOT              &kp FSLH       &kp BSLH
                                       &kp ESCAPE      &lt 1 SPACE         &kp LSHIFT    &lt 3 RET  &lt 2 BSPC          &lt 4 TAB
            >;
        };

        nav_layer {
            label = "NAV";
            bindings = <
       &none  &none             &none         &none             &none             &kp PG_UP  &kp HOME  &kp UP    &kp END    &kp INS
       &none  &kp LEFT_COMMAND  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT    &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &kp CAPS
&none  &none  &none             &none         &none             &none             &none      &none     &none     &none      &none     &none
                                &none         &none             &none             &mo 4      &mo 0     &none
            >;
        };

        num_layer {
            label = "NUM";
            bindings = <
       &kp NUMBER_1  &kp N2            &kp N3        &kp N4     &kp N5            &kp N6     &kp N7     &kp N8    &kp N9    &kp N0
       &none         &kp LEFT_COMMAND  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT    &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &none
&none  &none         &none             &none         &none      &none             &none      &none      &none     &none     &none   &none
                                       &mo 0         &mo 4      &none             &none      &none      &kp N0
            >;
        };

        sym_layer {
            label = "SYM";
            bindings = <
       &kp EXCL  &kp AT     &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND     &kp STAR           &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
       &none     &kp GRAVE  &none     &none       &kp PLUS       &kp EQUAL  &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp SINGLE_QUOTE      &trans
&none  &none     &kp TILDE  &none     &none       &kp PIPE       &kp MINUS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp DOUBLE_QUOTES     &trans                 &trans
                            &none     &none       &none          &none      &none             &none
            >;
        };

        fun_layer {
            label = "FUN";
            bindings = <
       &kp F12  &kp F7  &kp F8  &kp F9  &bootloader    &none            &none      &none         &none             &none
       &kp F11  &kp F4  &kp F5  &kp F6  &sys_reset     &kp RIGHT_SHIFT  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_COMMAND  &none
&none  &kp F10  &kp F1  &kp F2  &kp F3  &kp CAPS       &none            &none      &none         &none             &none  &none
                        &none   &none   &none          &none            &none      &none
            >;
        };
    };
};
