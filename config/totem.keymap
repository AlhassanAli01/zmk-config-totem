//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

// Miryoku ZMK implementation for Totem Keyboard

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

// Behavior configurations
&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <150>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            global-quick-tap;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "BASE";
            bindings = 
       &kp Q       &kp W       &kp F        &kp P        &kp B             &kp J    &kp L        &kp U        &kp Y       &kp SEMI
       &hm LGUI A  &hm LALT R  &hm LCTRL S  &hm LSHFT T  &kp G             &kp M    &hm RSHFT N  &hm RCTRL E  &hm RALT I  &hm RGUI O
&kp Q  &kp Z       &kp X       &kp C        &kp D        &kp V             &kp K    &kp H        &kp COMMA    &kp DOT     &kp FSLH      &kp BSLH
                               &kp ESC      &lt 1 SPACE  &lt 6 TAB         &lt 3 RET &lt 2 BSPC   &kp DEL
            >;
        };

        nav_layer {
            label = "NAV";
            bindings = 
        &trans     &trans     &trans      &trans      &trans        &kp PG_UP    &kp HOME     &kp UP      &kp END      &kp INS
        &kp LGUI   &kp LALT   &kp LCTRL   &kp LSHFT   &trans        &kp PG_DN    &kp LEFT     &kp DOWN    &kp RIGHT    &kp CAPS
&trans  &trans     &trans     &trans      &trans      &trans        &kp LC(Z)    &kp LC(X)    &kp LC(C)   &kp LC(V)    &kp LC(Y)   &trans
                              &trans      &trans      &lt 6 TRANS   &lt 4 TRANS  &lt 5 TRANS  &trans
            >;
        };

        num_layer {
            label = "NUM";
            bindings = 
        &trans     &trans     &trans      &trans      &trans        &kp LBKT     &kp N7       &kp N8      &kp N9       &kp RBKT
        &kp LGUI   &kp LALT   &kp LCTRL   &kp LSHFT   &trans        &kp EQUAL    &kp N4       &kp N5      &kp N6       &kp BSLH
&trans  &trans     &trans     &trans      &trans      &trans        &kp GRAVE    &kp N1       &kp N2      &kp N3       &kp SQT     &trans
                              &lt 5 TRANS &lt 4 TRANS &trans        &trans       &trans       &kp N0
            >;
        };

        sym_layer {
            label = "SYM";
            bindings = 
        &kp LBRC   &kp AMPS   &kp ASTRK   &kp LPAR    &kp RBRC      &trans       &trans       &trans      &trans       &trans
        &kp COLON  &kp DLLR   &kp PRCNT   &kp CARET   &kp PLUS      &trans       &kp RSHFT    &kp RCTRL   &kp RALT     &kp RGUI
&trans  &kp TILDE  &kp EXCL   &kp AT      &kp HASH    &kp PIPE      &trans       &trans       &trans      &trans       &trans     &trans
                              &trans      &trans      &trans        &trans       &trans       &trans
            >;
        };

        fun_layer {
            label = "FUN";
            bindings = 
        &kp F12    &kp F7     &kp F8      &kp F9      &bootloader    &trans       &trans       &trans      &trans       &trans
        &kp F11    &kp F4     &kp F5      &kp F6      &sys_reset     &trans       &kp RSHFT    &kp RCTRL   &kp RALT     &kp RGUI
&trans  &kp F10    &kp F1     &kp F2      &kp F3      &kp CAPS       &trans       &trans       &trans      &trans       &trans     &trans
                              &trans      &trans      &trans         &trans       &trans       &trans
            >;
        };

        media_layer {
            label = "MEDIA";
            bindings = 
        &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI    &trans     &trans         &trans        &trans         &trans
        &rgb_ug RGB_OFF  &rgb_ug RGB_EFR  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD    &trans     &kp C_PREV     &kp C_VOL_DN  &kp C_VOL_UP   &kp C_NEXT
&trans  &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &out OUT_TOG       &trans     &kp C_STOP     &kp C_MUTE    &kp C_PP       &trans     &trans
                                          &trans           &trans           &trans             &trans     &trans         &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = 
        &trans      &trans        &trans        &trans        &trans          &trans       &trans       &trans       &trans       &trans
        &kp LGUI    &trans        &trans        &trans        &trans          &trans       &trans       &trans       &trans       &trans
&trans  &trans      &trans        &trans        &trans        &trans          &kp LC(Z)    &kp LC(X)    &kp LC(C)    &kp LC(V)    &kp LC(Y)    &trans
                                  &trans        &trans        &trans          &trans       &trans       &trans
            >;
        };
    };
};
